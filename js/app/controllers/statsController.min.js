var siteApp=angular.module("statsPageApp",[]);siteApp.controller("StatsCtrl",function($scope,statsFactory){function successCallback(response){function trueParentChild(parent,child,user,arrayCollection){user.hasOwnProperty(parent)&&user[parent].hasOwnProperty(child)&&arrayCollection.push(user[parent][child])}function genderCheck(user){switch(user.gender){case"Male":stats.percents.males.push(user);break;case"Female":stats.percents.females.push(user)}}function getPercent(item,totalItems){return item/totalItems*100}function conversions(signedup,purchased,user,conditional,arrayCollection){user.hasOwnProperty(signedup)&&user.hasOwnProperty(purchased)&&user[purchased].hasOwnProperty("date")&&new Date(user[signedup].date)<=new Date(user[purchased].date)&&arrayCollection.push(user)}function buildScopeVars(props){if(props.counts)for(var count in props.counts)$scope[count]=props.counts[count].length;if(props.percents)for(var percent in props.percents)$scope[percent]=getPercent(props.percents[percent].length,$scope.totalRecords)}$scope.users=response;var stats={percents:{males:[],females:[],conversions:[],conversionsViewedProfile:[],conversionsViewedItem:[]},counts:{totalRecords:response,fullColorList:[],colorsCount:[],signedup:[],viewedProfile:[],viewedItem:[],purchasedItem:[]}};$scope.users.forEach(function(user){genderCheck(user),trueParentChild("purchased_item","color",user,stats.counts.fullColorList),trueParentChild("signed_up","date",user,stats.counts.signedup),trueParentChild("viewed_profile","date",user,stats.counts.viewedProfile),trueParentChild("viewed_item","date",user,stats.counts.viewedItem),trueParentChild("purchased_item","date",user,stats.counts.purchasedItem),conversions("signed_up","purchased_item",user,"",stats.percents.conversions),conversions("signed_up","purchased_item",user,"viewed_profile",stats.percents.conversionsViewedProfile),conversions("signed_up","purchased_item",user,"viewed_item",stats.percents.conversionsViewedItem)});var uniqueColorList=stats.counts.fullColorList.filter(function(keyword,index){return stats.counts.fullColorList.lastIndexOf(keyword)===index});stats.counts.colorsCount=uniqueColorList,buildScopeVars(stats),$scope.addRow=function(){statsFactory.getUser().success(function(u){$scope.users.unshift(u[0]),$scope.clicked=!0,successCallback($scope.users)}).error(function(error){throw"Could not add user: "+error.message})}}statsFactory.getUsers().success(function(users){successCallback(users)}).error(function(error){throw"There was an error loading the user data: "+error.message})});