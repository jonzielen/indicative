var siteApp=angular.module("statsPageApp",[]);siteApp.controller("StatsCtrl",function($scope,statsFactory){function successCallback(response){function trueParentChild(parent,child,user,arrayCollection){user.hasOwnProperty(parent)&&user[parent].hasOwnProperty(child)&&arrayCollection.push(user[parent][child])}function genderCheck(user){switch(user.gender){case"Male":count.males.push("m");break;case"Female":count.females.push("f")}}function getPercent(item){return item/$scope.totalRecords*100}function testConversions(signedup,purchased,user,viewed,arrayCollection){user.hasOwnProperty(signedup)&&user.hasOwnProperty(purchased)&&user[purchased].hasOwnProperty("date")&&new Date(user[signedup].date)<=new Date(user[purchased].date)&&(console.log(user),console.log(user[signedup].date),console.log(user[purchased].date),console.log("---------------"),arrayCollection.push(user))}function buildScopeVars(props){for(var prop in props)props.hasOwnProperty(prop)&&($scope[prop]=props[prop].length)}console.log("called"),$scope.users=response,$scope.totalRecords=response.length;var count={males:[],females:[],fullColorList:[],signedup:[],viewedProfile:[],viewedItem:[],purchasedItem:[],conversions:[]};$scope.users.forEach(function(user){genderCheck(user),trueParentChild("purchased_item","color",user,count.fullColorList),trueParentChild("signed_up","date",user,count.signedup),trueParentChild("viewed_profile","date",user,count.viewedProfile),trueParentChild("viewed_item","date",user,count.viewedItem),trueParentChild("purchased_item","date",user,count.purchasedItem),testConversions("signed_up","purchased_item",user,"",count.conversions)}),$scope.gender={men:getPercent(count.males.length),women:getPercent(count.females.length)};var uniqueColorList=count.fullColorList.filter(function(keyword,index){return count.fullColorList.lastIndexOf(keyword)===index});$scope.colorsCount=uniqueColorList.length,buildScopeVars(count),console.log(count),$scope.addRow=function(){statsFactory.getUser().success(function(u){$scope.users.unshift(u[0]),$scope.clicked=!0,successCallback($scope.users)}).error(function(error){throw"Could not add user: "+error.message})}}statsFactory.getUsers().success(function(users){successCallback(users)}).error(function(error){throw"There was an error loading the user data: "+error.message})});